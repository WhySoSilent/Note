变量作用域
--------------

理解变量声明提升
----
Javascript隐式的提升(hoists)声明部分(var)到封闭函数的顶部(js是函数作用域)，而降赋值留在原地。换句话说，变量作用域是整个函数，但仅在var语句出现的位置(这里指你先var后=的语句的位置)进行赋值。
一些程序员喜欢通过有效的手动提升变量将所有的var声明放置在函数的顶部，从而避免歧义。

javascript没有块级作用域的一个例外恰好是其异常处理。try...catch将语句捕获的异常绑定到一个变量，该变量的作用域只是catch语句
http://jsfiddle.net/WhySoSilent/rvyd8o6w/


使用立即调用的函数表达式创建局部作用域
----
之所以用的到这个的一个情况是：闭包存储的都是其外部变量的引用而不是值。

解决办法是通过创建一个嵌套函数并立即调用它来强制创建一个局部变量。
http://jsfiddle.net/WhySoSilent/hsf1x6uo/1/

